<template>
    <div class="san-ui-input-wrap {{validated ? validateRes ? 'success' : 'warn' : null}}">
        <input value="{= value =}" placeholder="{{helpText}}" class="san-ui-input"/>
        <span s-if="{{validated && validateRes}}" class="san-ui-input-success-icon"></span>
        <span s-if="{{validated && !validateRes}}" class="san-ui-input-error-text">{{errorText}}</span>
    </div>
</template>
<script>
import {DataTypes} from 'san'
export default {
    dataTypes: {
        helpText: DataTypes.string,
        errorText: DataTypes.string,
    },
    initData: function () {
        return {
            value: '',
            validated: false,
            validateRes: undefined
        }
    },
    //  展示校验结果 具体校验规则由formItem提供
    showValidateResult: function (errors) {
        this.data.set('validated', true)
        if (errors) {
            this.data.set('errorText', errors[0].message)
            this.data.set('validateRes', false)
        } else {
            this.data.set('errorText', '')
            this.data.set('validateRes', true)
        }
    },
    reset: function () {
        this.data.set('validated', false)
        this.data.set('validateRes', undefined)
        this.data.set('value', '')
    },
    inited() {
        this.dispatch('UI-input-inited')
    }
}
</script>
<style scoped>
    .san-ui-input-wrap {
        position: relative;
    }
    .san-ui-input-wrap .san-ui-input {

    }
    .san-ui-input-wrap .san-ui-input-success-icon {
        color: aqua;
    }
    .san-ui-input-wrap .san-ui-input-error-text {
        color: red;
    }
    .san-ui-input-wrap.warn .san-ui-input {
        border-color: red;
    }
    .san-ui-input-wrap.success .san-ui-input {
        border-color: aqua;
    }
</style>



